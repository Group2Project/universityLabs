//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop
#include "Unit1.h"
#include "Unit2.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
int n3(0);
FIFO *head1,*head2,*head3,*p1,*p2,*p3,*p1_d,*p2_d;
//---------------------------------------------------------------------------



//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
        : TForm(Owner)
{
}
//---------------------------------------------------------------------------


void __fastcall TForm1::Button3Click(TObject *Sender)
{
        Close();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button4Click(TObject *Sender)       //Вывод
{
        FIFO *spisok=head1;
        if(n1)
                while (spisok!=p1->next){
                        Memo1->Lines->Add(spisok->family + " " + spisok->code);
                        Memo1->Lines->Add(" ");
                        spisok=spisok->next;
                }
        spisok=head2;
        if(n2)
                while (spisok!=p2->next){
                        Memo2->Lines->Add(spisok->family + " " + spisok->code);
                        Memo2->Lines->Add(" ");
                        spisok=spisok->next;
                }

}
//---------------------------------------------------------------------------
void __fastcall TForm1::FormCreate(TObject *Sender)
{
        Memo1->Clear();
        Memo1->Lines->Add("Список 1:");
        Memo1->Lines->Add("");
        Memo2->Clear();
        Memo2->Lines->Add("Список 2:");
        Memo2->Lines->Add("");
        Memo3->Clear();
        Memo3->Lines->Add("Список 3:");
        Memo3->Lines->Add("");
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button2Click(TObject *Sender)
{
        p1_d=head1;
        if(p1!=p1_d) {
                for(int i=1;i<n1-1;i++)
                        p1_d=p1_d->next;
                delete p1;
                p1=p1_d;
                p1_d->next=NULL;
        }
        else {
                head1=NULL;
                delete p1_d;
        }
        n1--;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button5Click(TObject *Sender)
{
        Form2->Show();


}
//---------------------------------------------------------------------------


void __fastcall TForm1::Button1Click(TObject *Sender)
{
        Memo1->Clear();
        Memo2->Clear();
        Memo3->Clear();
}
//---------------------------------------------------------------------------



void __fastcall TForm1::Button6Click(TObject *Sender)
{
        p2_d=head2;
        if(p2!=p2_d) {
                for(int i=1;i<n2-1;i++)
                        p2_d=p2_d->next;
                delete p2;
                p2=p2_d;
                p2_d->next=NULL;
        }
        else {
                head2=NULL;
                delete p2_d;
        }
        n2--;
}
//---------------------------------------------------------------------------



void __fastcall TForm1::Button7Click(TObject *Sender)
{
        FIFO *spisok1=head1;
        FIFO *spisok3;
        for(int i=0;i<n1;i++)
        {
                FIFO *spisok2=head2;
                for(int j=0;j<n2;j++)
                {
                        if(spisok1->family == spisok2->family && spisok1->code == spisok2->code)
                        {
                                spisok3 = new FIFO;
                                spisok3->family=spisok1->family;
                                spisok3->code=spisok1->code;
                                if(head3){
                                        p3->next=spisok3;
                                        p3=spisok3;
                                }
                                else
                                        p3=head3=spisok3;
                                n3++;
                        }
                        spisok2=spisok2->next;
                }
                spisok1=spisok1->next;
        }
        spisok3=head3;
        if(n3)
                while (spisok3!=p3->next){
                        Memo3->Lines->Add(spisok3->family + " " + spisok3->code);
                        Memo3->Lines->Add(" ");
                        spisok3=spisok3->next;
                }
}
//---------------------------------------------------------------------------

