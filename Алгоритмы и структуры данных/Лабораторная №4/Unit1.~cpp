//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop
#include <iostream>
#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "CSPIN"
#pragma resource "*.dfm"
const int V = 5;
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
        : TForm(Owner)
{
}
//---------------------------------------------------------------------------

void find(int GR[V][V],int st)
{
        int distance[V],count,index,i,u, m=st+1;
        bool visited[V];
        for(i=0;i<V;i++)
        {
                distance[i]=INT_MAX;
                visited[i]=false;
        }
        distance[st]=0;
        for(count=0;count<V-1;count++)
        {
                int min = INT_MAX;
                for(i=0;i<V;i++)
                        if(!visited[i] && distance[i]<=min)
                        {
                                min=distance[i];
                                index=i;
                        }
                u=index;
                visited[u]=true;
                for(i=0;i<V;i++)
                        if(!visited[i] && GR[u][i] && distance[u]!=INT_MAX && distance[u]+GR[u][i]<distance[i])
                                distance[i]=distance[u]+GR[u][i];
        }
        for(i =0; i<V;i++)
                Form1->StringGrid1->Cells[i][0] = IntToStr(distance[i]);
}

//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{

        int GR[V][V]={
        {0,5,6,7,0},
        {0,0,8,0,0},
        {0,0,0,9,0},
        {0,0,0,0,10},
        {11,0,0,0,1}};
        int start = CSpinEdit1->Value;
        find(GR,start);

}
//---------------------------------------------------------------------------


